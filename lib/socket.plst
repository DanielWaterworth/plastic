interface SocketOperations(s)
    socket() -> s;
    bind(s, String, UInt) -> Void;
    listen(s, UInt) -> Void;
    accept(s) -> s;
    recv(s, UInt) -> ByteString;
    send(s, ByteString) -> Void;
    close(s) -> Void;
end

service SysSocket()
    constructor new()
    end

    implements SocketOperations(Socket)
        define socket() -> Socket do
            return sys socket_socket(2, 1, 0);
        end

        define bind(sock : Socket, host : String, port : UInt) -> Void do
            return sys socket_bind(sock, host, port);
        end

        define listen(sock : Socket, backlog : UInt) -> Void do
            return sys socket_listen(sock, backlog);
        end

        define accept(sock : Socket) -> Socket do
            return sys socket_accept(sock);
        end

        define recv(sock : Socket, n : UInt) -> ByteString do
            return sys socket_recv(sock, n);
        end

        define send(sock : Socket, data : ByteString) -> Void do
            return sys socket_send(sock, data);
        end

        define close(sock : Socket) -> Void do
            return sys socket_close(sock);
        end
    end
end
