record Foo
    attr foo : UInt;
    attr bar : UInt;

    constructor new(foo : UInt, bar : UInt)
        @foo := foo;
        @bar := bar;
    end

    define bar(bar : UInt) -> Bar do
        return Bar.new(self, bar);
    end

    define foo() -> Foo do
        return self;
    end

    define plah(a : UInt) -> Bool do
        return a < @bar;
    end
end

record Bar
    attr foo : Foo;
    attr bar : UInt;

    constructor new(foo : Foo, bar : UInt)
        @foo := foo;
        @bar := bar;
    end

    define foo() -> Foo do
        return @foo;
    end

    define plah() -> Bool do
        return self.foo().plah(@bar);
    end
end

define foo(foo : Foo) -> Foo do
    return foo;
end

define main() -> Bool do
    sys print_bool(foo(Foo.new(1, 2)).bar(3).plah().and(true));
    return false;
end

service Test()
    constructor new()
    end

    implements EntryPoint
        define main() -> Bool do
            return main();
        end
    end
end

entry
    return Test().new();
end
