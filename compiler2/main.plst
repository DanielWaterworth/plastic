import module_loader
import printer
import iter

define rsplit(s : String, c : Char) -> (String, String) do
    unpacked := s.unpack();

    for i in iter.range(s.length()) do
        i := s.length() - i - 1;
        if (unpacked.index(i) == c)
            return (s.take(i), s.drop(i+1));
        end
    end
    throw void;
end

service Main(
            m : module_loader.ModuleLoader
        )
    constructor new()
    end

    implements EntryPoint
        define main(args : List(ByteString)) -> Bool do
            if (args.length() < 2)
                debug("expected module");
                throw void;
            end

            filename := args.index(1).decode_utf8();
            filename, ending := rsplit(filename, '.');
            if (ending != "plst")
                debug("expected plst file");
                throw void;
            end
            dir, module := rsplit(filename, '/');

            @m.load(dir, module);

            return true;
        end
    end
end

entry
    f := file.SysFileOps().new();
    p := printer.SysPrinter().new();
    loader := module_loader.FileModuleLoader(f, p).new();
    return Main(loader).new();
end
